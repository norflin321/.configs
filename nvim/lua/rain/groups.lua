local M = {}

-- neovim terminal mode colors
local function set_terminal_colors(colors)
  vim.g.terminal_color_0 = colors.bg0
  vim.g.terminal_color_8 = colors.gray
  vim.g.terminal_color_1 = colors.neutral_red
  vim.g.terminal_color_9 = colors.red
  vim.g.terminal_color_2 = colors.neutral_green
  vim.g.terminal_color_10 = colors.green
  vim.g.terminal_color_3 = colors.neutral_yellow
  vim.g.terminal_color_11 = colors.yellow
  vim.g.terminal_color_4 = colors.neutral_blue
  vim.g.terminal_color_12 = colors.blue
  vim.g.terminal_color_5 = colors.neutral_purple
  vim.g.terminal_color_13 = colors.purple
  vim.g.terminal_color_6 = colors.neutral_aqua
  vim.g.terminal_color_14 = colors.aqua
  vim.g.terminal_color_7 = colors.fg4
  vim.g.terminal_color_15 = colors.fg1
end

M.setup = function()
  local config = require("rain").config
  local colors = require("rain.palette").get_base_colors()

  set_terminal_colors(colors)

  local groups = {
    -- Base groups
    rainFg0 = { fg = colors.fg0 },
    rainFg1 = { fg = colors.fg1 },
    rainFg2 = { fg = colors.fg2 },
    rainFg3 = { fg = colors.fg3 },
    rainFg4 = { fg = colors.fg4 },
    rainGray = { fg = colors.gray },
    rainBg0 = { fg = colors.bg0 },
    rainBg1 = { fg = colors.bg1 },
    rainBg2 = { fg = colors.bg2 },
    rainBg3 = { fg = colors.bg3 },
    rainBg4 = { fg = colors.bg4 },
    rainRed = { fg = colors.red },
    rainRedBold = { fg = colors.red, bold = config.bold },
    rainGreen = { fg = colors.green },
    rainGreenBold = { fg = colors.green, bold = config.bold },
    rainYellow = { fg = colors.yellow },
    rainYellowBold = { fg = colors.yellow, bold = config.bold },
    rainBlue = { fg = colors.blue },
    rainBlueBold = { fg = colors.blue, bold = config.bold },
    rainPurple = { fg = colors.purple },
    rainPurpleBold = { fg = colors.purple, bold = config.bold },
    rainAqua = { fg = colors.aqua },
    rainAquaBold = { fg = colors.aqua, bold = config.bold },
    rainOrange = { fg = colors.orange },
    rainOrangeBold = { fg = colors.orange, bold = config.bold },
    rainRedSign = config.transparent_mode and { fg = colors.red, reverse = config.invert_signs }
      or { fg = colors.red, bg = colors.bg1, reverse = config.invert_signs },
    rainGreenSign = config.transparent_mode and { fg = colors.green, reverse = config.invert_signs }
      or { fg = colors.green, bg = colors.bg1, reverse = config.invert_signs },
    rainYellowSign = config.transparent_mode and { fg = colors.yellow, reverse = config.invert_signs }
      or { fg = colors.yellow, bg = colors.bg1, reverse = config.invert_signs },
    rainBlueSign = config.transparent_mode and { fg = colors.blue, reverse = config.invert_signs }
      or { fg = colors.blue, bg = colors.bg1, reverse = config.invert_signs },
    rainPurpleSign = config.transparent_mode and { fg = colors.purple, reverse = config.invert_signs }
      or { fg = colors.purple, bg = colors.bg1, reverse = config.invert_signs },
    rainAquaSign = config.transparent_mode and { fg = colors.aqua, reverse = config.invert_signs }
      or { fg = colors.aqua, bg = colors.bg1, reverse = config.invert_signs },
    rainOrangeSign = config.transparent_mode and { fg = colors.orange, reverse = config.invert_signs }
      or { fg = colors.orange, bg = colors.bg1, reverse = config.invert_signs },
    rainRedUnderline = { undercurl = config.undercurl, sp = colors.red },
    rainGreenUnderline = { undercurl = config.undercurl, sp = colors.green },
    rainYellowUnderline = { undercurl = config.undercurl, sp = colors.yellow },
    rainBlueUnderline = { undercurl = config.undercurl, sp = colors.blue },
    rainPurpleUnderline = { undercurl = config.undercurl, sp = colors.purple },
    rainAquaUnderline = { undercurl = config.undercurl, sp = colors.aqua },
    rainOrangeUnderline = { undercurl = config.undercurl, sp = colors.orange },
    Normal = config.transparent_mode and { fg = colors.fg1, bg = nil } or { fg = colors.fg1, bg = colors.bg0 },
    NormalNC = config.dim_inactive and { fg = colors.fg0, bg = colors.bg1 } or { link = "Normal" },
    CursorLine = { bg = colors.bg1 },
    CursorColumn = { link = "CursorLine" },
    TabLineFill = { fg = colors.bg4, bg = colors.bg1, reverse = config.invert_tabline },
    TabLineSel = { fg = colors.green, bg = colors.bg1, reverse = config.invert_tabline },
    TabLine = { link = "TabLineFill" },
    MatchParen = { bg = colors.bg3, bold = config.bold },
    ColorColumn = { bg = colors.bg1 },
    Conceal = { fg = colors.blue },
    CursorLineNr = { fg = colors.yellow, bg = colors.bg1 },
    NonText = { link = "rainBg2" },
    SpecialKey = { link = "rainFg4" },
    Visual = { bg = "#49483E", reverse = false },
    VisualNOS = { link = "Visual" },
    Search = { fg = "#121212", bg = "#8E700B", reverse = false },
    IncSearch = { link = "Search" },
    CurSearch = { link = "Search" },
    QuickFixLine = { fg = colors.bg0, bg = colors.yellow, bold = config.bold },
    Underlined = { fg = colors.blue, underline = config.underline },
    StatusLine = { fg = "#B0B0B0", bg = "#383839" },
    StatusLineNC = { fg = "#949494", bg = "#383839" },
    WinBar = { fg = colors.fg4, bg = colors.bg0 },
    WinBarNC = { fg = colors.fg3, bg = colors.bg1 },
    VertSplit = { fg = colors.bg3, bg = colors.bg0 },
    WildMenu = { fg = colors.blue, bg = colors.bg2, bold = config.bold },
    Directory = { link = "rainBlueBold" },
    Title = { link = "rainGreenBold" },
    ErrorMsg = { fg = "#f19d7e", bg = "none", bold = config.bold },
    MoreMsg = { link = "rainYellowBold" },
    ModeMsg = { link = "rainYellowBold" },
    Question = { link = "rainOrangeBold" },
    WarningMsg = { link = "rainRedBold" },
    LineNr = { fg = colors.bg4 },
    SignColumn = { link = "StatusLine" },
    Folded = { fg = colors.gray, bg = colors.bg1, italic = config.italic },
    FoldColumn = { fg = colors.gray, bg = colors.bg1 },
    Cursor = { reverse = config.inverse },
    vCursor = { link = "Cursor" },
    iCursor = { link = "Cursor" },
    lCursor = { link = "Cursor" },
    Special = { link = "rainOrange" },
    Comment = { fg = colors.gray, italic = config.italic },
    Todo = { fg = colors.fg0, bold = config.bold, italic = config.italic },
    Done = { fg = colors.orange, bold = config.bold, italic = config.italic },
    Error = { fg = "#f19d7e", bold = config.bold, reverse = false },
    Statement = { link = "rainRed" },
    Conditional = { link = "rainRed" },
    Repeat = { link = "rainRed" },
    Label = { link = "rainRed" },
    Exception = { link = "rainRed" },
    Operator = { fg = colors.orange, italic = config.italic },
    Keyword = { link = "rainRed" },
    Identifier = { link = "rainBlue" },
    Function = { link = "rainGreenBold" },
    PreProc = { link = "rainAqua" },
    Include = { link = "rainAqua" },
    Define = { link = "rainAqua" },
    Macro = { link = "rainAqua" },
    PreCondit = { link = "rainAqua" },
    Constant = { link = "rainPurple" },
    Character = { link = "rainPurple" },
    String = { fg = colors.green, italic = config.italic },
    Boolean = { link = "rainPurple" },
    Number = { link = "rainPurple" },
    Float = { link = "rainPurple" },
    Type = { link = "rainYellow" },
    StorageClass = { link = "rainOrange" },
    Structure = { link = "rainAqua" },
    Typedef = { link = "rainYellow" },
    Pmenu = { fg = colors.fg1, bg = colors.bg2 },
    PmenuSel = { fg = colors.bg2, bg = colors.blue, bold = config.bold },
    PmenuSbar = { bg = colors.bg2 },
    PmenuThumb = { bg = colors.bg4 },
    DiffDelete = { fg = colors.red, bg = colors.bg0, reverse = config.inverse },
    DiffAdd = { fg = colors.green, bg = colors.bg0, reverse = config.inverse },
    DiffChange = { fg = colors.aqua, bg = colors.bg0, reverse = config.inverse },
    DiffText = { fg = colors.yellow, bg = colors.bg0, reverse = config.inverse },
    SpellCap = { link = "rainBlueUnderline" },
    SpellBad = { link = "rainRedUnderline" },
    SpellLocal = { link = "rainAquaUnderline" },
    SpellRare = { link = "rainPurpleUnderline" },
    Whitespace = { fg = colors.bg2 },
    -- nvim-treesitter (0.8 compat)
    -- Adapted from https://github.com/nvim-treesitter/nvim-treesitter/commit/42ab95d5e11f247c6f0c8f5181b02e816caa4a4f#commitcomment-87014462
    ["@annotation"] = { link = "Operator" },
    ["@comment"] = { link = "Comment" },
    ["@none"] = { bg = "NONE", fg = "NONE" },
    ["@preproc"] = { link = "PreProc" },
    ["@define"] = { link = "Define" },
    ["@operator"] = { link = "Operator" },
    ["@punctuation.delimiter"] = { link = "Delimiter" },
    ["@punctuation.bracket"] = { link = "Delimiter" },
    ["@punctuation.special"] = { link = "Delimiter" },
    ["@string"] = { link = "String" },
    ["@string.regex"] = { link = "String" },
    ["@string.escape"] = { link = "SpecialChar" },
    ["@string.special"] = { link = "SpecialChar" },
    ["@character"] = { link = "Character" },
    ["@character.special"] = { link = "SpecialChar" },
    ["@boolean"] = { link = "Boolean" },
    ["@number"] = { link = "Number" },
    ["@float"] = { link = "Float" },
    ["@function"] = { link = "Function" },
    ["@function.call"] = { link = "Function" },
    ["@function.builtin"] = { link = "Special" },
    ["@function.macro"] = { link = "Macro" },
    ["@method"] = { link = "Function" },
    ["@method.call"] = { link = "Function" },
    ["@constructor"] = { link = "Special" },
    ["@parameter"] = { link = "Identifier" },
    ["@keyword"] = { link = "Keyword" },
    ["@keyword.function"] = { link = "Keyword" },
    ["@keyword.return"] = { link = "Keyword" },
    ["@conditional"] = { link = "Conditional" },
    ["@repeat"] = { link = "Repeat" },
    ["@debug"] = { link = "Debug" },
    ["@label"] = { link = "Label" },
    ["@include"] = { link = "Include" },
    ["@exception"] = { link = "Exception" },
    ["@type"] = { link = "Type" },
    ["@type.builtin"] = { link = "Type" },
    ["@type.qualifier"] = { link = "Type" },
    ["@type.definition"] = { link = "Typedef" },
    ["@storageclass"] = { link = "StorageClass" },
    ["@attribute"] = { link = "PreProc" },
    ["@field"] = { link = "Identifier" },
    ["@property"] = { link = "Identifier" },
    ["@variable"] = { link = "rainFg1" },
    ["@variable.builtin"] = { link = "Special" },
    ["@constant"] = { link = "Constant" },
    ["@constant.builtin"] = { link = "Special" },
    ["@constant.macro"] = { link = "Define" },
    ["@namespace"] = { link = "rainFg1" },
    ["@symbol"] = { link = "Identifier" },
    ["@text"] = { link = "rainFg1" },
    ["@text.title"] = { link = "Title" },
    ["@text.literal"] = { link = "String" },
    ["@text.uri"] = { link = "Underlined" },
    ["@text.math"] = { link = "Special" },
    ["@text.environment"] = { link = "Macro" },
    ["@text.environment.name"] = { link = "Type" },
    ["@text.reference"] = { link = "Constant" },
    ["@text.todo"] = { link = "Todo" },
    ["@text.todo.unchecked"] = { link = "Todo" },
    ["@text.todo.checked"] = { link = "Done" },
    ["@text.note"] = { link = "SpecialComment" },
    ["@text.warning"] = { link = "WarningMsg" },
    ["@text.danger"] = { link = "ErrorMsg" },
    ["@text.diff.add"] = { link = "diffAdded" },
    ["@text.diff.delete"] = { link = "diffRemoved" },
    ["@tag"] = { link = "Tag" },
    ["@tag.attribute"] = { link = "Identifier" },
    ["@tag.delimiter"] = { link = "Delimiter" },

    -- nvim-treesitter (0.8 overrides)
    ["@text.strong"] = { bold = config.bold },
    ["@text.strike"] = { strikethrough = config.strikethrough },
    ["@text.emphasis"] = { italic = config.italic },
    ["@text.underline"] = { underline = config.underline },
    ["@keyword.operator"] = { link = "rainRed" },
    -- nvim-tree
    NvimTreeSymlink = { fg = colors.neutral_aqua },
    NvimTreeRootFolder = { fg = colors.neutral_purple, bold = true },
    NvimTreeFolderIcon = { fg = colors.neutral_blue, bold = true },
    NvimTreeFileIcon = { fg = colors.light2 },
    NvimTreeExecFile = { fg = colors.neutral_green, bold = true },
    NvimTreeOpenedFile = { fg = colors.bright_red, bold = true },
    NvimTreeSpecialFile = { fg = colors.neutral_yellow, bold = true, underline = true },
    NvimTreeImageFile = { fg = colors.neutral_purple },
    NvimTreeIndentMarker = { fg = colors.dark3 },
    NvimTreeGitDirty = { fg = colors.neutral_yellow },
    NvimTreeGitStaged = { fg = colors.neutral_yellow },
    NvimTreeGitMerge = { fg = colors.neutral_purple },
    NvimTreeGitRenamed = { fg = colors.neutral_purple },
    NvimTreeGitNew = { fg = colors.neutral_yellow },
    NvimTreeGitDeleted = { fg = colors.neutral_red },
    NvimTreeWindowPicker = { bg = colors.faded_aqua },
    -- coc.nvim
    CocErrorSign = { fg = "#f19d7e", bg = "#1c1c1c" },
    CocWarningSign = { link = "rainOrangeSign" },
    CocInfoSign = { link = "rainBlueSign" },
    CocHintSign = { link = "rainAquaSign" },
    CocErrorFloat = { fg = "#f19d7e", bg = "#1c1c1c" },
    CocWarningFloat = { link = "rainOrange" },
    CocInfoFloat = { link = "rainBlue" },
    CocHintFloat = { link = "rainAqua" },
    CocDiagnosticsError = { link = "rainRed" },
    CocDiagnosticsWarning = { link = "rainOrange" },
    CocDiagnosticsInfo = { link = "rainBlue" },
    CocDiagnosticsHint = { link = "rainAqua" },
    CocSelectedText = { link = "rainRed" },
    CocMenuSel = { link = "PmenuSel" },
    CocCodeLens = { link = "rainGray" },
    CocErrorHighlight = { undercurl = true, sp = "#f19d7e" },
    CocWarningHighlight = { link = "rainOrangeUnderline" },
    CocInfoHighlight = { link = "rainBlueUnderline" },
    CocHintHighlight = { link = "rainAquaUnderline" },
    -- html
    htmlTag = { link = "rainAquaBold" },
    htmlEndTag = { link = "rainAquaBold" },
    htmlTagName = { link = "rainBlue" },
    htmlArg = { link = "rainOrange" },
    htmlTagN = { link = "rainFg1" },
    htmlSpecialTagName = { link = "rainBlue" },
    htmlLink = { fg = colors.fg4, underline = config.underline },
    htmlSpecialChar = { link = "rainRed" },
    htmlBold = { fg = colors.fg0, bg = colors.bg0, bold = config.bold },
    htmlBoldUnderline = { fg = colors.fg0, bg = colors.bg0, bold = config.bold, underline = config.underline },
    htmlBoldItalic = { fg = colors.fg0, bg = colors.bg0, bold = config.bold, italic = config.italic },
    htmlBoldUnderlineItalic = {
      fg = colors.fg0,
      bg = colors.bg0,
      bold = config.bold,
      italic = config.italic,
      underline = config.underline,
    },
    htmlUnderline = { fg = colors.fg0, bg = colors.bg0, underline = config.underline },
    htmlUnderlineItalic = {
      fg = colors.fg0,
      bg = colors.bg0,
      italic = config.italic,
      underline = config.underline,
    },
    htmlItalic = { fg = colors.fg0, bg = colors.bg0, bold = config.italic },
    -- xml
    xmlTag = { link = "rainAquaBold" },
    xmlEndTag = { link = "rainAquaBold" },
    xmlTagName = { link = "rainBlue" },
    xmlEqual = { link = "rainBlue" },
    docbkKeyword = { link = "rainAquaBold" },
    xmlDocTypeDecl = { link = "rainGray" },
    xmlDocTypeKeyword = { link = "rainPurple" },
    xmlCdataStart = { link = "rainGray" },
    xmlCdataCdata = { link = "rainPurple" },
    dtdFunction = { link = "rainGray" },
    dtdTagName = { link = "rainPurple" },
    xmlAttrib = { link = "rainOrange" },
    xmlProcessingDelim = { link = "rainGray" },
    dtdParamEntityPunct = { link = "rainGray" },
    dtdParamEntityDPunct = { link = "rainGray" },
    xmlAttribPunct = { link = "rainGray" },
    xmlEntity = { link = "rainRed" },
    xmlEntityPunct = { link = "rainRed" },
    -- C
    cOperator = { link = "rainPurple" },
    cppOperator = { link = "rainPurple" },
    cStructure = { link = "rainOrange" },
    -- python
    pythonBuiltin = { link = "rainOrange" },
    pythonBuiltinObj = { link = "rainOrange" },
    pythonBuiltinFunc = { link = "rainOrange" },
    pythonFunction = { link = "rainAqua" },
    pythonDecorator = { link = "rainRed" },
    pythonInclude = { link = "rainBlue" },
    pythonImport = { link = "rainBlue" },
    pythonRun = { link = "rainBlue" },
    pythonCoding = { link = "rainBlue" },
    pythonOperator = { link = "rainRed" },
    pythonException = { link = "rainRed" },
    pythonExceptions = { link = "rainPurple" },
    pythonBoolean = { link = "rainPurple" },
    pythonDot = { link = "rainFg3" },
    pythonConditional = { link = "rainRed" },
    pythonRepeat = { link = "rainRed" },
    pythonDottedName = { link = "rainGreenBold" },
    -- CSS
    cssBraces = { link = "rainBlue" },
    cssFunctionName = { link = "rainYellow" },
    cssIdentifier = { link = "rainOrange" },
    cssClassName = { link = "rainGreen" },
    cssColor = { link = "rainBlue" },
    cssSelectorOp = { link = "rainBlue" },
    cssSelectorOp2 = { link = "rainBlue" },
    cssImportant = { link = "rainGreen" },
    cssVendor = { link = "rainFg1" },
    cssTextProp = { link = "rainAqua" },
    cssAnimationProp = { link = "rainAqua" },
    cssUIProp = { link = "rainYellow" },
    cssTransformProp = { link = "rainAqua" },
    cssTransitionProp = { link = "rainAqua" },
    cssPrintProp = { link = "rainAqua" },
    cssPositioningProp = { link = "rainYellow" },
    cssBoxProp = { link = "rainAqua" },
    cssFontDescriptorProp = { link = "rainAqua" },
    cssFlexibleBoxProp = { link = "rainAqua" },
    cssBorderOutlineProp = { link = "rainAqua" },
    cssBackgroundProp = { link = "rainAqua" },
    cssMarginProp = { link = "rainAqua" },
    cssListProp = { link = "rainAqua" },
    cssTableProp = { link = "rainAqua" },
    cssFontProp = { link = "rainAqua" },
    cssPaddingProp = { link = "rainAqua" },
    cssDimensionProp = { link = "rainAqua" },
    cssRenderProp = { link = "rainAqua" },
    cssColorProp = { link = "rainAqua" },
    cssGeneratedContentProp = { link = "rainAqua" },
    -- javascript
    javaScriptBraces = { link = "rainFg1" },
    javaScriptFunction = { link = "rainAqua" },
    javaScriptIdentifier = { link = "rainRed" },
    javaScriptMember = { link = "rainBlue" },
    javaScriptNumber = { link = "rainPurple" },
    javaScriptNull = { link = "rainPurple" },
    javaScriptParens = { link = "rainFg3" },
    -- typescript
    typescriptReserved = { link = "rainAqua" },
    typescriptLabel = { link = "rainAqua" },
    typescriptFuncKeyword = { link = "rainAqua" },
    typescriptIdentifier = { link = "rainOrange" },
    typescriptBraces = { link = "rainFg1" },
    typescriptEndColons = { link = "rainFg1" },
    typescriptDOMObjects = { link = "rainFg1" },
    typescriptAjaxMethods = { link = "rainFg1" },
    typescriptLogicSymbols = { link = "rainFg1" },
    typescriptDocSeeTag = { link = "Comment" },
    typescriptDocParam = { link = "Comment" },
    typescriptDocTags = { link = "vimCommentTitle" },
    typescriptGlobalObjects = { link = "rainFg1" },
    typescriptParens = { link = "rainFg3" },
    typescriptOpSymbols = { link = "rainFg3" },
    typescriptHtmlElemProperties = { link = "rainFg1" },
    typescriptNull = { link = "rainPurple" },
    typescriptInterpolationDelimiter = { link = "rainAqua" },
    -- objc
    objcTypeModifier = { link = "rainRed" },
    objcDirective = { link = "rainBlue" },
    -- go
    goDirective = { link = "rainAqua" },
    goConstants = { link = "rainPurple" },
    goDeclaration = { link = "rainRed" },
    goDeclType = { link = "rainBlue" },
    goBuiltins = { link = "rainOrange" },
    -- lua
    luaIn = { link = "rainRed" },
    luaFunction = { link = "rainAqua" },
    luaTable = { link = "rainOrange" },
    -- markdown
    markdownItalic = { fg = colors.fg3, italic = config.italic },
    markdownBold = { fg = colors.fg3, bold = config.bold },
    markdownBoldItalic = { fg = colors.fg3, bold = config.bold, italic = config.italic },
    markdownH1 = { link = "rainGreenBold" },
    markdownH2 = { link = "rainGreenBold" },
    markdownH3 = { link = "rainYellowBold" },
    markdownH4 = { link = "rainYellowBold" },
    markdownH5 = { link = "rainYellow" },
    markdownH6 = { link = "rainYellow" },
    markdownCode = { link = "rainAqua" },
    markdownCodeBlock = { link = "rainAqua" },
    markdownCodeDelimiter = { link = "rainAqua" },
    markdownBlockquote = { link = "rainGray" },
    markdownListMarker = { link = "rainGray" },
    markdownOrderedListMarker = { link = "rainGray" },
    markdownRule = { link = "rainGray" },
    markdownHeadingRule = { link = "rainGray" },
    markdownUrlDelimiter = { link = "rainFg3" },
    markdownLinkDelimiter = { link = "rainFg3" },
    markdownLinkTextDelimiter = { link = "rainFg3" },
    markdownHeadingDelimiter = { link = "rainOrange" },
    markdownUrl = { link = "rainPurple" },
    markdownUrlTitleDelimiter = { link = "rainGreen" },
    markdownLinkText = { fg = colors.gray, underline = config.underline },
    markdownIdDeclaration = { link = "markdownLinkText" },
    -- json
    jsonKeyword = { link = "rainGreen" },
    jsonQuote = { link = "rainGreen" },
    jsonBraces = { link = "rainFg1" },
    jsonString = { link = "rainFg1" },
    -- rust btw
    rustSigil = { link = "rainOrange" },
    rustEscape = { link = "rainAqua" },
    rustStringContinuation = { link = "rainAqua" },
    rustEnum = { link = "rainAqua" },
    rustStructure = { link = "rainAqua" },
    rustModPathSep = { link = "rainFg2" },
    rustCommentLineDoc = { link = "Comment" },
    rustDefault = { link = "rainAqua" },
  }

  for group, hl in pairs(config.overrides) do
    if groups[group] and not vim.tbl_isempty(hl) then
      groups[group].link = nil
    end
    groups[group] = vim.tbl_extend("force", groups[group] or {}, hl)
  end

  return groups
end

return M
